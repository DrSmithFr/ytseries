@import "variables";

// loader
@mixin obj($w,$h,$bg) {
  width: $w;
  height: $h;
  background: $bg;
}

@mixin anim($listName,$delay) {
  @each $currentBox in $listName {
    $i: index($listName, $currentBox);
    &:nth-child(#{$currentBox}) {
      animation-delay: 0.1s * $i + $delay;
    }
  }
}

.loader-overlay-fullscreen {
  &.fullscreen {
    z-index: 999;
    position: fixed;

    top: 0;
    bottom: 0;
    right: 0;
    left: 0;

    display: flex;
    align-items: center;
    justify-content: center;

    .loader-overlay-wrapper {
      width: 50%;
      display: flex;
    }

    .loader {
      width: 100%;
    }
  }
}

.loader-overlay-wrapper {
  padding: 40%;

  &.overlay {
    background: rgba(238, 238, 238, 0.8);
  }
}

.loader {
  display: flex;
  justify-content: center;
  align-items: center;

  .square-container {
    position: relative;
    width: 100%;
    padding-top: 100%;


    .square {
      position: absolute;

      top: 0;
      left: 0;
      bottom: 0;
      right: 0;

    }
  }

  .wrapper {
    @include obj(100%, 100%, null);
  }

  ul {
    list-style-type: none;

    padding: 0;
    margin: 0;

    width: 100%;
    height: 100%;

    display: grid;
    grid-template-columns: repeat(5, 1fr);
    animation: rot 16s linear infinite;
    @keyframes rot {
      100% {
        transform: rotate(360deg);
      }
    }
  }

  li {
    justify-content: center;
    justify-self: center;
    align-self: center;

    @include obj(50%, 50%, $alpha);

    border-radius: 100%;
    box-shadow: 0 0 1px #fff, 0 0 5px $alpha, 0 0 10px $alpha, 0 0 15px $alpha, 0 0 25px $alpha, 0 0 55px $alpha;
    animation: scale 0.8s linear alternate infinite;

    @keyframes scale {
      100% {
        transform: scale(.1);
        opacity: 0;
      }
    }
    @for $i from 1 through 25 {
      &:nth-child(#{$i}) {
        z-index: 25 - $i;
      }
    }
    @for $i from 1 through 5 {
      &:nth-child(#{$i}) {
        animation-delay: 0.1s * $i;
      }
      &:nth-child(#{$i + 6}) {
        @if ($i<5) {
          animation-delay: 0.1s * $i + 0.2s;
        }
      }
      &:nth-child(#{$i + 12}) {
        @if ($i<4) {
          animation-delay: 0.1s * $i + 0.4s;
        }
      }
      &:nth-child(#{$i + 18}) {
        @if ($i<3) {
          animation-delay: 0.1s * $i + 0.6s;
        }
      }
      &:nth-child(#{$i + 23}) {
        @if ($i<2) {
          animation-delay: 0.1s * $i + 0.8s;
        }
      }
    }

    $fCol: 1 6 11 16 21;
    @include anim($fCol, 0);

    $sCol: 7 12 17 22;
    @include anim($sCol, 0.2s);

    $tCol: 13 18 23;
    @include anim($tCol, 0.4s);

    $foCol: 19 24;
    @include anim($foCol, 0.6s);

    &:nth-child(25) {
      animation-delay: 0.9s;
    }
  }
}
